{"remainingRequest":"E:\\I0\\xxx-admin\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\I0\\xxx-admin\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\I0\\xxx-admin\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\I0\\xxx-admin\\vue\\node_modules\\element-ui\\packages\\select\\src\\select.vue?vue&type=template&id=6d7686ab&","dependencies":[{"path":"E:\\I0\\xxx-admin\\vue\\node_modules\\element-ui\\packages\\select\\src\\select.vue","mtime":499162500000},{"path":"E:\\I0\\xxx-admin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\I0\\xxx-admin\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\I0\\xxx-admin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\I0\\xxx-admin\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}